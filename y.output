Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | LPAREN RPAREN
    5    | INT
    6    | STRING
    7    | BOOL
    8    | TRUE
    9    | FALSE
   10    | MINUS exp
   11    | func_call
   12    | arith_exp
   13    | cmp_exp
   14    | bool_exp
   15    | record_create
   16    | array_create
   17    | lvalue ASSIGN exp
   18    | IF exp THEN exp ELSE exp
   19    | IF exp THEN exp
   20    | WHILE exp DO exp
   21    | FOR ID ASSIGN exp TO exp DO exp
   22    | BREAK
   23    | LET decs IN expseq END
   24    | LPAREN expseq RPAREN

   25 lvalue: ID
   26       | ID LBRACK exp RBRACK
   27       | lvalue LBRACK exp RBRACK
   28       | lvalue DOT ID

   29 func_call: ID LPAREN explist RPAREN

   30 explist: %empty
   31        | explist_nonempty

   32 explist_nonempty: exp
   33                 | explist_nonempty COMMA exp

   34 arith_exp: exp PLUS exp
   35          | exp MINUS exp
   36          | exp TIMES exp
   37          | exp DIVIDE exp

   38 cmp_exp: exp EQ exp
   39        | exp NEQ exp
   40        | exp LT exp
   41        | exp LE exp
   42        | exp GT exp
   43        | exp GE exp

   44 bool_exp: exp AND exp
   45         | exp OR exp

   46 record_create: ID LBRACE record_create_list RBRACE

   47 record_create_list: %empty
   48                   | record_create_list_nonempty

   49 record_create_list_nonempty: record_create_field
   50                            | record_create_list_nonempty COMMA record_create_field

   51 record_create_field: ID EQ exp

   52 array_create: ID LBRACK exp RBRACK OF exp

   53 decs: %empty
   54     | decs dec

   55 dec: tydeclist
   56    | vardec
   57    | fundeclist

   58 tydeclist: tydec
   59          | tydec tydeclist

   60 tydec: TYPE ID EQ ty

   61 ty: ID
   62   | LBRACE tyfields RBRACE
   63   | ARRAY OF ID

   64 tyfields: %empty
   65         | tyfields_nonempty

   66 tyfields_nonempty: tyfield
   67                  | tyfields_nonempty COMMA tyfield

   68 tyfield: ID COLON ID

   69 vardec: VAR ID ASSIGN exp
   70       | VAR ID COLON ID ASSIGN exp

   71 fundeclist: fundec
   72           | fundec fundeclist

   73 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   74       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   75 expseq: exp
   76       | expseq SEMICOLON exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    LOW (258)
    UMINUS (259)
    ID <sval> (260) 21 25 26 28 29 46 51 52 60 61 63 68 69 70 73 74
    STRING <sval> (261) 6
    INT <ival> (262) 5
    COMMA (263) 33 50 67
    COLON (264) 68 70 74
    SEMICOLON (265) 76
    LPAREN (266) 4 24 29 73 74
    RPAREN (267) 4 24 29 73 74
    LBRACK (268) 26 27 52
    RBRACK (269) 26 27 52
    LBRACE (270) 46 62
    RBRACE (271) 46 62
    DOT (272) 28
    PLUS (273) 34
    MINUS (274) 10 35
    TIMES (275) 36
    DIVIDE (276) 37
    EQ (277) 38 51 60 73 74
    NEQ (278) 39
    LT (279) 40
    LE (280) 41
    GT (281) 42
    GE (282) 43
    AND (283) 44
    OR (284) 45
    ASSIGN (285) 17 21 69 70
    ARRAY (286) 63
    IF (287) 18 19
    THEN (288) 18 19
    ELSE (289) 18
    WHILE (290) 20
    FOR (291) 21
    TO (292) 21
    DO (293) 20 21
    LET (294) 23
    IN (295) 23
    END (296) 23
    OF (297) 52 63
    BREAK (298) 22
    NIL (299) 3
    FUNCTION (300) 73 74
    VAR (301) 69 70
    TYPE (302) 60
    BOOL (303) 7
    TRUE (304) 8
    FALSE (305) 9


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    exp (53)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
        on right: 1 10 17 18 19 20 21 26 27 32 33 34 35 36 37 38 39 40 41 42 43 44 45 51 52 69 70 73 74 75 76
    lvalue (54)
        on left: 25 26 27 28
        on right: 2 17 27 28
    func_call (55)
        on left: 29
        on right: 11
    explist (56)
        on left: 30 31
        on right: 29
    explist_nonempty (57)
        on left: 32 33
        on right: 31 33
    arith_exp (58)
        on left: 34 35 36 37
        on right: 12
    cmp_exp (59)
        on left: 38 39 40 41 42 43
        on right: 13
    bool_exp (60)
        on left: 44 45
        on right: 14
    record_create (61)
        on left: 46
        on right: 15
    record_create_list (62)
        on left: 47 48
        on right: 46
    record_create_list_nonempty (63)
        on left: 49 50
        on right: 48 50
    record_create_field (64)
        on left: 51
        on right: 49 50
    array_create (65)
        on left: 52
        on right: 16
    decs (66)
        on left: 53 54
        on right: 23 54
    dec (67)
        on left: 55 56 57
        on right: 54
    tydeclist (68)
        on left: 58 59
        on right: 55 59
    tydec (69)
        on left: 60
        on right: 58 59
    ty (70)
        on left: 61 62 63
        on right: 60
    tyfields (71)
        on left: 64 65
        on right: 62 73 74
    tyfields_nonempty (72)
        on left: 66 67
        on right: 65 67
    tyfield (73)
        on left: 68
        on right: 66 67
    vardec (74)
        on left: 69 70
        on right: 56
    fundeclist (75)
        on left: 71 72
        on right: 57 72
    fundec (76)
        on left: 73 74
        on right: 71 72
    expseq (77)
        on left: 75 76
        on right: 23 24 76


State 0

    0 $accept: • program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    program        go to state 15
    exp            go to state 16
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 1

   25 lvalue: ID •
   26       | ID • LBRACK exp RBRACK
   29 func_call: ID • LPAREN explist RPAREN
   46 record_create: ID • LBRACE record_create_list RBRACE
   52 array_create: ID • LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 24
    LBRACK  shift, and go to state 25
    LBRACE  shift, and go to state 26

    $default  reduce using rule 25 (lvalue)


State 2

    6 exp: STRING •

    $default  reduce using rule 6 (exp)


State 3

    5 exp: INT •

    $default  reduce using rule 5 (exp)


State 4

    4 exp: LPAREN • RPAREN
   24    | LPAREN • expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 27
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 28
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23
    expseq         go to state 29


State 5

   10 exp: MINUS • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 30
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 6

   18 exp: IF • exp THEN exp ELSE exp
   19    | IF • exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 31
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 7

   20 exp: WHILE • exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 32
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 8

   21 exp: FOR • ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 33


State 9

   23 exp: LET • decs IN expseq END

    $default  reduce using rule 53 (decs)

    decs  go to state 34


State 10

   22 exp: BREAK •

    $default  reduce using rule 22 (exp)


State 11

    3 exp: NIL •

    $default  reduce using rule 3 (exp)


State 12

    7 exp: BOOL •

    $default  reduce using rule 7 (exp)


State 13

    8 exp: TRUE •

    $default  reduce using rule 8 (exp)


State 14

    9 exp: FALSE •

    $default  reduce using rule 9 (exp)


State 15

    0 $accept: program • $end

    $end  shift, and go to state 35


State 16

    1 program: exp •
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 1 (program)


State 17

    2 exp: lvalue •
   17    | lvalue • ASSIGN exp
   27 lvalue: lvalue • LBRACK exp RBRACK
   28       | lvalue • DOT ID

    LBRACK  shift, and go to state 48
    DOT     shift, and go to state 49
    ASSIGN  shift, and go to state 50

    $default  reduce using rule 2 (exp)


State 18

   11 exp: func_call •

    $default  reduce using rule 11 (exp)


State 19

   12 exp: arith_exp •

    $default  reduce using rule 12 (exp)


State 20

   13 exp: cmp_exp •

    $default  reduce using rule 13 (exp)


State 21

   14 exp: bool_exp •

    $default  reduce using rule 14 (exp)


State 22

   15 exp: record_create •

    $default  reduce using rule 15 (exp)


State 23

   16 exp: array_create •

    $default  reduce using rule 16 (exp)


State 24

   29 func_call: ID LPAREN • explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    $default  reduce using rule 30 (explist)

    exp               go to state 51
    lvalue            go to state 17
    func_call         go to state 18
    explist           go to state 52
    explist_nonempty  go to state 53
    arith_exp         go to state 19
    cmp_exp           go to state 20
    bool_exp          go to state 21
    record_create     go to state 22
    array_create      go to state 23


State 25

   26 lvalue: ID LBRACK • exp RBRACK
   52 array_create: ID LBRACK • exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 54
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 26

   46 record_create: ID LBRACE • record_create_list RBRACE

    ID  shift, and go to state 55

    $default  reduce using rule 47 (record_create_list)

    record_create_list           go to state 56
    record_create_list_nonempty  go to state 57
    record_create_field          go to state 58


State 27

    4 exp: LPAREN RPAREN •

    $default  reduce using rule 4 (exp)


State 28

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   75 expseq: exp •

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 75 (expseq)


State 29

   24 exp: LPAREN expseq • RPAREN
   76 expseq: expseq • SEMICOLON exp

    SEMICOLON  shift, and go to state 59
    RPAREN     shift, and go to state 60


State 30

   10 exp: MINUS exp •
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    $default  reduce using rule 10 (exp)


State 31

   18 exp: IF exp • THEN exp ELSE exp
   19    | IF exp • THEN exp
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    THEN    shift, and go to state 61


State 32

   20 exp: WHILE exp • DO exp
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    DO      shift, and go to state 62


State 33

   21 exp: FOR ID • ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 63


State 34

   23 exp: LET decs • IN expseq END
   54 decs: decs • dec

    IN        shift, and go to state 64
    FUNCTION  shift, and go to state 65
    VAR       shift, and go to state 66
    TYPE      shift, and go to state 67

    dec         go to state 68
    tydeclist   go to state 69
    tydec       go to state 70
    vardec      go to state 71
    fundeclist  go to state 72
    fundec      go to state 73


State 35

    0 $accept: program $end •

    $default  accept


State 36

   34 arith_exp: exp PLUS • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 74
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 37

   35 arith_exp: exp MINUS • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 75
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 38

   36 arith_exp: exp TIMES • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 76
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 39

   37 arith_exp: exp DIVIDE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 77
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 40

   38 cmp_exp: exp EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 78
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 41

   39 cmp_exp: exp NEQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 79
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 42

   40 cmp_exp: exp LT • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 80
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 43

   41 cmp_exp: exp LE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 81
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 44

   42 cmp_exp: exp GT • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 82
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 45

   43 cmp_exp: exp GE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 83
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 46

   44 bool_exp: exp AND • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 84
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 47

   45 bool_exp: exp OR • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 85
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 48

   27 lvalue: lvalue LBRACK • exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 86
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 49

   28 lvalue: lvalue DOT • ID

    ID  shift, and go to state 87


State 50

   17 exp: lvalue ASSIGN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 88
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 51

   32 explist_nonempty: exp •
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 32 (explist_nonempty)


State 52

   29 func_call: ID LPAREN explist • RPAREN

    RPAREN  shift, and go to state 89


State 53

   31 explist: explist_nonempty •
   33 explist_nonempty: explist_nonempty • COMMA exp

    COMMA  shift, and go to state 90

    $default  reduce using rule 31 (explist)


State 54

   26 lvalue: ID LBRACK exp • RBRACK
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   52 array_create: ID LBRACK exp • RBRACK OF exp

    RBRACK  shift, and go to state 91
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47


State 55

   51 record_create_field: ID • EQ exp

    EQ  shift, and go to state 92


State 56

   46 record_create: ID LBRACE record_create_list • RBRACE

    RBRACE  shift, and go to state 93


State 57

   48 record_create_list: record_create_list_nonempty •
   50 record_create_list_nonempty: record_create_list_nonempty • COMMA record_create_field

    COMMA  shift, and go to state 94

    $default  reduce using rule 48 (record_create_list)


State 58

   49 record_create_list_nonempty: record_create_field •

    $default  reduce using rule 49 (record_create_list_nonempty)


State 59

   76 expseq: expseq SEMICOLON • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 95
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 60

   24 exp: LPAREN expseq RPAREN •

    $default  reduce using rule 24 (exp)


State 61

   18 exp: IF exp THEN • exp ELSE exp
   19    | IF exp THEN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 96
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 62

   20 exp: WHILE exp DO • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 97
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 63

   21 exp: FOR ID ASSIGN • exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 98
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 64

   23 exp: LET decs IN • expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 28
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23
    expseq         go to state 99


State 65

   73 fundec: FUNCTION • ID LPAREN tyfields RPAREN EQ exp
   74       | FUNCTION • ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 100


State 66

   69 vardec: VAR • ID ASSIGN exp
   70       | VAR • ID COLON ID ASSIGN exp

    ID  shift, and go to state 101


State 67

   60 tydec: TYPE • ID EQ ty

    ID  shift, and go to state 102


State 68

   54 decs: decs dec •

    $default  reduce using rule 54 (decs)


State 69

   55 dec: tydeclist •

    $default  reduce using rule 55 (dec)


State 70

   58 tydeclist: tydec •
   59          | tydec • tydeclist

    TYPE  shift, and go to state 67

    $default  reduce using rule 58 (tydeclist)

    tydeclist  go to state 103
    tydec      go to state 70


State 71

   56 dec: vardec •

    $default  reduce using rule 56 (dec)


State 72

   57 dec: fundeclist •

    $default  reduce using rule 57 (dec)


State 73

   71 fundeclist: fundec •
   72           | fundec • fundeclist

    FUNCTION  shift, and go to state 65

    $default  reduce using rule 71 (fundeclist)

    fundeclist  go to state 104
    fundec      go to state 73


State 74

   34 arith_exp: exp • PLUS exp
   34          | exp PLUS exp •
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    $default  reduce using rule 34 (arith_exp)


State 75

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   35          | exp MINUS exp •
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    $default  reduce using rule 35 (arith_exp)


State 76

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   36          | exp TIMES exp •
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    $default  reduce using rule 36 (arith_exp)


State 77

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   37          | exp DIVIDE exp •
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    $default  reduce using rule 37 (arith_exp)


State 78

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   38        | exp EQ exp •
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 38 (cmp_exp)


State 79

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   39        | exp NEQ exp •
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 39 (cmp_exp)


State 80

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   40        | exp LT exp •
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 40 (cmp_exp)


State 81

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   41        | exp LE exp •
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 41 (cmp_exp)


State 82

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   42        | exp GT exp •
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 42 (cmp_exp)


State 83

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   43        | exp GE exp •
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 43 (cmp_exp)


State 84

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   44         | exp AND exp •
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45

    $default  reduce using rule 44 (bool_exp)


State 85

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   45         | exp OR exp •

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46

    $default  reduce using rule 45 (bool_exp)


State 86

   27 lvalue: lvalue LBRACK exp • RBRACK
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    RBRACK  shift, and go to state 105
    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47


State 87

   28 lvalue: lvalue DOT ID •

    $default  reduce using rule 28 (lvalue)


State 88

   17 exp: lvalue ASSIGN exp •
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 17 (exp)


State 89

   29 func_call: ID LPAREN explist RPAREN •

    $default  reduce using rule 29 (func_call)


State 90

   33 explist_nonempty: explist_nonempty COMMA • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 106
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 91

   26 lvalue: ID LBRACK exp RBRACK •
   52 array_create: ID LBRACK exp RBRACK • OF exp

    OF  shift, and go to state 107

    $default  reduce using rule 26 (lvalue)


State 92

   51 record_create_field: ID EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 108
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 93

   46 record_create: ID LBRACE record_create_list RBRACE •

    $default  reduce using rule 46 (record_create)


State 94

   50 record_create_list_nonempty: record_create_list_nonempty COMMA • record_create_field

    ID  shift, and go to state 55

    record_create_field  go to state 109


State 95

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   76 expseq: expseq SEMICOLON exp •

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 76 (expseq)


State 96

   18 exp: IF exp THEN exp • ELSE exp
   19    | IF exp THEN exp •
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    ELSE    shift, and go to state 110

    $default  reduce using rule 19 (exp)


State 97

   20 exp: WHILE exp DO exp •
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 20 (exp)


State 98

   21 exp: FOR ID ASSIGN exp • TO exp DO exp
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    TO      shift, and go to state 111


State 99

   23 exp: LET decs IN expseq • END
   76 expseq: expseq • SEMICOLON exp

    SEMICOLON  shift, and go to state 59
    END        shift, and go to state 112


State 100

   73 fundec: FUNCTION ID • LPAREN tyfields RPAREN EQ exp
   74       | FUNCTION ID • LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 113


State 101

   69 vardec: VAR ID • ASSIGN exp
   70       | VAR ID • COLON ID ASSIGN exp

    COLON   shift, and go to state 114
    ASSIGN  shift, and go to state 115


State 102

   60 tydec: TYPE ID • EQ ty

    EQ  shift, and go to state 116


State 103

   59 tydeclist: tydec tydeclist •

    $default  reduce using rule 59 (tydeclist)


State 104

   72 fundeclist: fundec fundeclist •

    $default  reduce using rule 72 (fundeclist)


State 105

   27 lvalue: lvalue LBRACK exp RBRACK •

    $default  reduce using rule 27 (lvalue)


State 106

   33 explist_nonempty: explist_nonempty COMMA exp •
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 33 (explist_nonempty)


State 107

   52 array_create: ID LBRACK exp RBRACK OF • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 117
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 108

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   51 record_create_field: ID EQ exp •

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 51 (record_create_field)


State 109

   50 record_create_list_nonempty: record_create_list_nonempty COMMA record_create_field •

    $default  reduce using rule 50 (record_create_list_nonempty)


State 110

   18 exp: IF exp THEN exp ELSE • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 118
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 111

   21 exp: FOR ID ASSIGN exp TO • exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 119
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 112

   23 exp: LET decs IN expseq END •

    $default  reduce using rule 23 (exp)


State 113

   73 fundec: FUNCTION ID LPAREN • tyfields RPAREN EQ exp
   74       | FUNCTION ID LPAREN • tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 120

    $default  reduce using rule 64 (tyfields)

    tyfields           go to state 121
    tyfields_nonempty  go to state 122
    tyfield            go to state 123


State 114

   70 vardec: VAR ID COLON • ID ASSIGN exp

    ID  shift, and go to state 124


State 115

   69 vardec: VAR ID ASSIGN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 125
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 116

   60 tydec: TYPE ID EQ • ty

    ID      shift, and go to state 126
    LBRACE  shift, and go to state 127
    ARRAY   shift, and go to state 128

    ty  go to state 129


State 117

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   52 array_create: ID LBRACK exp RBRACK OF exp •

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 52 (array_create)


State 118

   18 exp: IF exp THEN exp ELSE exp •
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 18 (exp)


State 119

   21 exp: FOR ID ASSIGN exp TO exp • DO exp
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47
    DO      shift, and go to state 130


State 120

   68 tyfield: ID • COLON ID

    COLON  shift, and go to state 131


State 121

   73 fundec: FUNCTION ID LPAREN tyfields • RPAREN EQ exp
   74       | FUNCTION ID LPAREN tyfields • RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 132


State 122

   65 tyfields: tyfields_nonempty •
   67 tyfields_nonempty: tyfields_nonempty • COMMA tyfield

    COMMA  shift, and go to state 133

    $default  reduce using rule 65 (tyfields)


State 123

   66 tyfields_nonempty: tyfield •

    $default  reduce using rule 66 (tyfields_nonempty)


State 124

   70 vardec: VAR ID COLON ID • ASSIGN exp

    ASSIGN  shift, and go to state 134


State 125

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   69 vardec: VAR ID ASSIGN exp •

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 69 (vardec)


State 126

   61 ty: ID •

    $default  reduce using rule 61 (ty)


State 127

   62 ty: LBRACE • tyfields RBRACE

    ID  shift, and go to state 120

    $default  reduce using rule 64 (tyfields)

    tyfields           go to state 135
    tyfields_nonempty  go to state 122
    tyfield            go to state 123


State 128

   63 ty: ARRAY • OF ID

    OF  shift, and go to state 136


State 129

   60 tydec: TYPE ID EQ ty •

    $default  reduce using rule 60 (tydec)


State 130

   21 exp: FOR ID ASSIGN exp TO exp DO • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 137
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 131

   68 tyfield: ID COLON • ID

    ID  shift, and go to state 138


State 132

   73 fundec: FUNCTION ID LPAREN tyfields RPAREN • EQ exp
   74       | FUNCTION ID LPAREN tyfields RPAREN • COLON ID EQ exp

    COLON  shift, and go to state 139
    EQ     shift, and go to state 140


State 133

   67 tyfields_nonempty: tyfields_nonempty COMMA • tyfield

    ID  shift, and go to state 120

    tyfield  go to state 141


State 134

   70 vardec: VAR ID COLON ID ASSIGN • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 142
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 135

   62 ty: LBRACE tyfields • RBRACE

    RBRACE  shift, and go to state 143


State 136

   63 ty: ARRAY OF • ID

    ID  shift, and go to state 144


State 137

   21 exp: FOR ID ASSIGN exp TO exp DO exp •
   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 21 (exp)


State 138

   68 tyfield: ID COLON ID •

    $default  reduce using rule 68 (tyfield)


State 139

   74 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON • ID EQ exp

    ID  shift, and go to state 145


State 140

   73 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 146
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 141

   67 tyfields_nonempty: tyfields_nonempty COMMA tyfield •

    $default  reduce using rule 67 (tyfields_nonempty)


State 142

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   70 vardec: VAR ID COLON ID ASSIGN exp •

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 70 (vardec)


State 143

   62 ty: LBRACE tyfields RBRACE •

    $default  reduce using rule 62 (ty)


State 144

   63 ty: ARRAY OF ID •

    $default  reduce using rule 63 (ty)


State 145

   74 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID • EQ exp

    EQ  shift, and go to state 147


State 146

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   73 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp •

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 73 (fundec)


State 147

   74 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ • exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11
    BOOL    shift, and go to state 12
    TRUE    shift, and go to state 13
    FALSE   shift, and go to state 14

    exp            go to state 148
    lvalue         go to state 17
    func_call      go to state 18
    arith_exp      go to state 19
    cmp_exp        go to state 20
    bool_exp       go to state 21
    record_create  go to state 22
    array_create   go to state 23


State 148

   34 arith_exp: exp • PLUS exp
   35          | exp • MINUS exp
   36          | exp • TIMES exp
   37          | exp • DIVIDE exp
   38 cmp_exp: exp • EQ exp
   39        | exp • NEQ exp
   40        | exp • LT exp
   41        | exp • LE exp
   42        | exp • GT exp
   43        | exp • GE exp
   44 bool_exp: exp • AND exp
   45         | exp • OR exp
   74 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp •

    PLUS    shift, and go to state 36
    MINUS   shift, and go to state 37
    TIMES   shift, and go to state 38
    DIVIDE  shift, and go to state 39
    EQ      shift, and go to state 40
    NEQ     shift, and go to state 41
    LT      shift, and go to state 42
    LE      shift, and go to state 43
    GT      shift, and go to state 44
    GE      shift, and go to state 45
    AND     shift, and go to state 46
    OR      shift, and go to state 47

    $default  reduce using rule 74 (fundec)
